#ifndef HELPER
#define HELPER

# include "headers.h"

// get the path for PID
string get_path_for_pid(pid_t pid) {
    char path[32];
    sprintf(path, "/proc/%d/exe", pid);
    string fullpath = string(path);
    return fullpath;
}

// get paths of all running processes
vector<string> path(){
	vector<string> s;
	PROCTAB* proc = openproc(PROC_FILLMEM | PROC_FILLSTAT | PROC_FILLSTATUS);
	proc_t proc_info;
	memset(&proc_info, 0, sizeof(proc_info));
	// loop on running processes
	while (readproc(proc, &proc_info) != NULL) {
	  	// get the full path to all running processes
	  	s.push_back(get_path_for_pid(proc_info.tid));
	  	//cout << get_path_for_pid(proc_info.tid) << endl;
	}
	closeproc(proc);
	return s;
}

//garp process id
unsigned int grap_proc(string x){
	string y = "";
	for(unsigned int i=6;i<x.size();i++){
		if(x[i] != '/'){
			y+=x[i];
		}else{
			break;
		}
	}
	return stoi(y);
}

#endif